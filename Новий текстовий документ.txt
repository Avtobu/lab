from pygame import*

win_width = 700 
win_height = 500
display.set_caption('Лабіринт')
window = display.set_mode((win_width, win_height))
picture = transform.scale(image.load('fon.png'), (700,500))

picture = transform.scale(image.load('fon.png'), (700,500))

finish = False
run = True
a = 'level0'
                

while run:
    time.delay(50)
    display.update()

    if not finish:
        if a == 'level0':
            window.blit(picture, (0,0))
            for e in event.get():
                if e.type == QUIT:
                    run = False
                elif e.type == KEYDOWN:
                    if e.key == K_SPACE:
                        a = 'level1'


        elif a == 'level1':



            class GameSprite(sprite.Sprite):
                def __init__(self,player_image,player_x, player_y, size_x, size_y):
                    sprite.Sprite.__init__(self)
                    self.image = transform.scale(image.load(player_image), (size_x, size_y))
                    self.rect = self.image.get_rect()
                    self.rect.x = player_x
                    self.rect.y = player_y

                def reset(self):
                    window.blit(self.image, (self.rect.x, self.rect.y))
                
            class Player(GameSprite):
                def __init__(self, player_image, player_x, player_y,size_x,size_y, player_x_speed, player_y_speed):
                    GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                    self.x_speed =  player_x_speed
                    self.y_speed = player_y_speed

                def update(self):
                    self.rect.x += self.x_speed
                    
                    platforms_touched = sprite.spritecollide(self, barriers, False)
                    if self.x_speed > 0:
                        for i in platforms_touched:
                            self.rect.right = i.rect.left 
                    elif self.x_speed<0:
                        for i in platforms_touched:
                            self.rect.left = i.rect.right
                            
                            
                    self.rect.y += self.y_speed
                    platforms_touched = sprite.spritecollide(self, barriers, False)
                    if self.y_speed > 0:
                        for i in platforms_touched:
                            self.y_speed =0
                            if i.rect.top < self.rect.bottom:
                                self.rect.bottom = i.rect.top
                    elif self.y_speed < 0:
                        for i in platforms_touched:
                            self.y_speed =0
                            self.rect.top = i.rect.bottom

                def fire(self):
                    bullet = Bullet('bullet.png', self.rect.right, self.rect.centery,25,25, 10)
                    bullets.add(bullet)
                
                    
            class Enemy(GameSprite):
                def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed, direct):
                    GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                    self.speed = player_speed
                    self.direct = direct
                    if self.direct == 'vert':
                        self.side = 'down'
                    else:
                        self.side = 'left'
                    
                
                def update(self):
                    if self.direct == 'hort':
                        if self.rect.x<=165:
                            self.side = "right"
                        if self.rect.x>= win_width-390:
                            self.side = "left"
                        if self.side == "left":
                            self.rect.x -= self.speed
                        else:
                            self.rect.x += self.speed
                    
                    else:
                        if self.rect.y<=100:
                            self.side = "up"
                        if self.rect.y>= 250:
                            self.side = "down"
                        if self.side == "down":
                            self.rect.y -= self.speed
                        else:
                            self.rect.y += self.speed

                    
            class Bullet(GameSprite):
                def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed):
                    GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                    self.speed = player_speed

                def update(self):
                    self.rect.x += self.speed
                    if self.rect.x > win_width+10:
                        self.kill()
                    

            win_width = 700 
            win_height = 500
            display.set_caption('Лабіринт')
            window = display.set_mode((win_width, win_height))
            picture = transform.scale(image.load('fon.png'), (700,500))

            w1 = GameSprite('hort.png',400,50,300, 50)
            w2 = GameSprite('vert.png',120, -30, 50,400)
            w3 = GameSprite('vert.png',400, 200, 50,400)

            monster = Enemy('tapok.png', 450,200,70,60,6, 'vert')
            monster1 = Enemy('tapok.png', 200, 250,70,60,6, 'hort')

            bullets = sprite.Group()
            monsters = sprite.Group()
            barriers = sprite.Group()

            barriers.add(w1)
            barriers.add(w2)
            barriers.add(w3)

            monsters.add(monster)
            monsters.add(monster1)

            pacman = Player('cat.png',5, 60, 80,80,0,0)

            final_sprite = GameSprite('final.png', win_width - 85, win_height-100,80,80)



            picture = transform.scale(image.load('fon.png'), (700,500))

            finish = False
            run = True
            a = 'level1'
            while run:
                time.delay(50)
                for e in event.get():
                    if e.type == QUIT:
                        run = False
                    elif e.type == KEYDOWN:
                        if e.key == K_LEFT:
                            pacman.x_speed = -7
                        if e.key == K_RIGHT:
                            pacman.x_speed = 7
                        if e.key == K_UP:
                            pacman.y_speed = -7
                        if e.key == K_DOWN:
                            pacman.y_speed = 7
                    elif e.type == KEYUP:
                        if e.key == K_LEFT:
                            pacman.x_speed = 0
                        if e.key == K_RIGHT:
                            pacman.x_speed = 0
                        if e.key == K_UP:
                            pacman.y_speed = 0
                        if e.key == K_DOWN:
                            pacman.y_speed = 0
                        if e.key == K_SPACE:
                            pacman.fire()


                if not finish:
                    if a == 'level1':
                        window.blit(picture, (0,0))
                        pacman.reset()
                        pacman.update()
                        barriers.draw(window)
                        final_sprite.reset()
                        bullets.draw(window)
                        bullets.update()


                        sprite.groupcollide(monsters,bullets, True, True)
                        monsters.update()
                        monsters.draw(window)
                        sprite.groupcollide(bullets, barriers, True, False)


                        if sprite.spritecollide(pacman,monsters, False):
                            finish = True
                            img = image.load('over.png')
                            d = img.get_width() // img.get_height()
                            window.fill((255,255, 255))
                            window.blit(transform.scale(img, (win_height *d, win_height)), (90,0))

                        if sprite.collide_rect(pacman,final_sprite):
                            a = 'level2'
                    #display.update()
                        # img = image.load('win.png')
                            #window.fill((255,255, 255))
                            #window.blit(transform.scale(img, (win_width, win_height)), (0,0))
                    elif a == 'level2':
                        class GameSprite(sprite.Sprite):
                            def __init__(self,player_image,player_x, player_y, size_x, size_y):
                                sprite.Sprite.__init__(self)
                                self.image = transform.scale(image.load(player_image), (size_x, size_y))
                                self.rect = self.image.get_rect()
                                self.rect.x = player_x
                                self.rect.y = player_y

                            def reset(self):
                                window.blit(self.image, (self.rect.x, self.rect.y))
                            
                        class Player(GameSprite):
                            def __init__(self, player_image, player_x, player_y,size_x,size_y, player_x_speed, player_y_speed):
                                GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                self.x_speed =  player_x_speed
                                self.y_speed = player_y_speed

                            def update(self):
                                self.rect.x += self.x_speed
                                
                                platforms_touched = sprite.spritecollide(self, barriers, False)
                                if self.x_speed > 0:
                                    for i in platforms_touched:
                                        self.rect.right = i.rect.left 
                                elif self.x_speed<0:
                                    for i in platforms_touched:
                                        self.rect.left = i.rect.right
                                        
                                        
                                self.rect.y += self.y_speed
                                platforms_touched = sprite.spritecollide(self, barriers, False)
                                if self.y_speed > 0:
                                    for i in platforms_touched:
                                        self.y_speed =0
                                        if i.rect.top < self.rect.bottom:
                                            self.rect.bottom = i.rect.top
                                elif self.y_speed < 0:
                                    for i in platforms_touched:
                                        self.y_speed =0
                                        self.rect.top = i.rect.bottom

                            def fire(self):
                                bullet = Bullet('bullet.png', self.rect.right, self.rect.centery,25,25, 10)
                                bullets.add(bullet)
                            
                                
                        class Enemy(GameSprite):
                            def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed, direct):
                                GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                self.speed = player_speed
                                self.direct = direct
                                if self.direct == 'vert':
                                    self.side = 'down'
                                else:
                                    self.side = 'left'
                                
                            
                            def update(self):
                                if self.direct == 'hort':
                                    if self.rect.x<=350:
                                        self.side = "right"
                                    if self.rect.x>=650:
                                        self.side = "left"
                                    if self.side == "left":
                                        self.rect.x -= self.speed
                                    else:
                                        self.rect.x += self.speed

                                elif self.direct == 'hort2':
                                    if self.rect.x<=120:
                                        self.side = "left"
                                    if self.rect.x>=165:
                                        self.side = "right"
                                    if self.side == "right":
                                        self.rect.x -= self.speed
                                    else:
                                        self.rect.x += self.speed
                                
                                else:
                                    if self.rect.y<=320:
                                        self.side = "up"
                                    if self.rect.y>= 350:
                                        self.side = "down"
                                    if self.side == "down":
                                        self.rect.y -= self.speed
                                    else:
                                        self.rect.y += self.speed

                                
                        class Bullet(GameSprite):
                            def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed):
                                GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                self.speed = player_speed

                            def update(self):
                                self.rect.x += self.speed
                                if self.rect.x > win_width+10:
                                    self.kill()
                                

                        win_width = 700 
                        win_height = 500
                        display.set_caption('Лабіринт')
                        window = display.set_mode((win_width, win_height))
                        picture = transform.scale(image.load('fon.png'), (700,500))

                        wh1 = GameSprite('hort.png',230,120,200,30)
                        wh2 = GameSprite('hort.png',100,300,700,30)
                        wh3 = GameSprite('hort.png',0,450,600,30)
                        wv1 = GameSprite('vert.png',100,100,30,200)
                        wv2 = GameSprite('vert.png',230,150,30,150)
                        wv3 = GameSprite('vert.png',530,120,30,180)



                        monster = Enemy('tapok.png', 500,350,70,60,4, 'vert')
                        monster2 = Enemy('tapok.png', 100,320,70,60,6, 'vert')
                        monster1 = Enemy('tapok.png', 550, 20,70,60,6, 'hort')
                        monster3 = Enemy('tapok.png', 120, 200,70,60,6, 'hort2')

                        bullets = sprite.Group()
                        monsters = sprite.Group()
                        barriers = sprite.Group()

                        barriers.add(wh1)
                        barriers.add(wh2)
                        barriers.add(wh3)
                        barriers.add(wv1)
                        barriers.add(wv2)
                        barriers.add(wv3)


                        monsters.add(monster)
                        monsters.add(monster1)
                        monsters.add(monster2)
                        monsters.add(monster3)

                        pacman = Player('cat.png',350, 180, 80,80,0,0)

                        final_sprite = GameSprite('final.png', 600, 400,80,80)



                        picture = transform.scale(image.load('fon.png'), (700,500))

                        finish = False
                        run = True
                        a = 'level2'
                        while run:
                            time.delay(50)
                            for e in event.get():
                                if e.type == QUIT:
                                    run = False
                                elif e.type == KEYDOWN:
                                    if e.key == K_LEFT:
                                        pacman.x_speed = -7
                                    if e.key == K_RIGHT:
                                        pacman.x_speed = 7
                                    if e.key == K_UP:
                                        pacman.y_speed = -7
                                    if e.key == K_DOWN:
                                        pacman.y_speed = 7
                                elif e.type == KEYUP:
                                    if e.key == K_LEFT:
                                        pacman.x_speed = 0
                                    if e.key == K_RIGHT:
                                        pacman.x_speed = 0
                                    if e.key == K_UP:
                                        pacman.y_speed = 0
                                    if e.key == K_DOWN:
                                        pacman.y_speed = 0
                                    if e.key == K_SPACE:
                                        pacman.fire()


                            if not finish:
                                if a == 'level2':
                                    window.blit(picture, (0,0))
                                    pacman.reset()
                                    pacman.update()
                                    barriers.draw(window)
                                    final_sprite.reset()
                                    bullets.draw(window)
                                    bullets.update()


                                    sprite.groupcollide(monsters,bullets, True, True)
                                    monsters.update()
                                    monsters.draw(window)
                                    sprite.groupcollide(bullets, barriers, True, False)


                                    if sprite.spritecollide(pacman,monsters, False):
                                        finish = True
                                        img = image.load('over.png')
                                        d = img.get_width() // img.get_height()
                                        window.fill((255,255, 255))
                                        window.blit(transform.scale(img, (win_height *d, win_height)), (90,0))

                                    if sprite.collide_rect(pacman,final_sprite):
                                        a = 'level3'
                               # display.update()
                                elif a == 'level3':
                                    class GameSprite(sprite.Sprite):
                                        def __init__(self,player_image,player_x, player_y, size_x, size_y):
                                            sprite.Sprite.__init__(self)
                                            self.image = transform.scale(image.load(player_image), (size_x, size_y))
                                            self.rect = self.image.get_rect()
                                            self.rect.x = player_x
                                            self.rect.y = player_y

                                        def reset(self):
                                            window.blit(self.image, (self.rect.x, self.rect.y))
                                        
                                    class Player(GameSprite):
                                        def __init__(self, player_image, player_x, player_y,size_x,size_y, player_x_speed, player_y_speed):
                                            GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                            self.x_speed =  player_x_speed
                                            self.y_speed = player_y_speed

                                        def update(self):
                                            self.rect.x += self.x_speed
                                            
                                            platforms_touched = sprite.spritecollide(self, barriers, False)
                                            if self.x_speed > 0:
                                                for i in platforms_touched:
                                                    self.rect.right = i.rect.left 
                                            elif self.x_speed<0:
                                                for i in platforms_touched:
                                                    self.rect.left = i.rect.right
                                                    
                                                    
                                            self.rect.y += self.y_speed
                                            platforms_touched = sprite.spritecollide(self, barriers, False)
                                            if self.y_speed > 0:
                                                for i in platforms_touched:
                                                    self.y_speed =0
                                                    if i.rect.top < self.rect.bottom:
                                                        self.rect.bottom = i.rect.top
                                            elif self.y_speed < 0:
                                                for i in platforms_touched:
                                                    self.y_speed =0
                                                    self.rect.top = i.rect.bottom

                                        def fire(self):
                                            bullet = Bullet('bullet.png', self.rect.right, self.rect.centery,25,25, 10)
                                            bullets.add(bullet)
                                        
                                            
                                    class Enemy(GameSprite):
                                        def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed, direct):
                                            GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                            self.speed = player_speed
                                            self.direct = direct
                                            if self.direct == 'vert':
                                                self.side = 'down'
                                            else:
                                                self.side = 'left'
                                            
                                        
                                        def update(self):
                                            if self.direct == 'hort':
                                                if self.rect.x<=5:
                                                    self.side = "left"
                                                if self.rect.x>= win_width-640:
                                                    self.side = "right"
                                                if self.side == "right":
                                                    self.rect.x -= self.speed
                                                else:
                                                    self.rect.x += self.speed
                                                
                                            elif self.direct == 'vert1':
                                                if self.rect.y<=130:
                                                    self.side = "up"
                                                if self.rect.y>= 240:
                                                    self.side = "down"
                                                if self.side == "down":
                                                    self.rect.y -= self.speed
                                                else:
                                                    self.rect.y += self.speed

                                            elif self.direct == 'vert2':
                                                if self.rect.y<=10:
                                                    self.side = "up"
                                                if self.rect.y>= 150:
                                                    self.side = "down"
                                                if self.side == "down":
                                                    self.rect.y -= self.speed
                                                else:
                                                    self.rect.y += self.speed
                                            
                                            else:
                                                if self.rect.y<=300:
                                                    self.side = "up"
                                                if self.rect.y>= 420:
                                                    self.side = "down"
                                                if self.side == "down":
                                                    self.rect.y -= self.speed
                                                else:
                                                    self.rect.y += self.speed

                                            
                                    class Bullet(GameSprite):
                                        def __init__(self, player_image, player_x, player_y,size_x,size_y, player_speed):
                                            GameSprite.__init__(self, player_image, player_x, player_y,size_x,size_y)
                                            self.speed = player_speed

                                        def update(self):
                                            self.rect.x += self.speed
                                            if self.rect.x > win_width-10:
                                                self.kill()
                                            

                                    win_width = 700 
                                    win_height = 500
                                    display.set_caption('Лабіринт')
                                    window = display.set_mode((win_width, win_height))
                                    picture = transform.scale(image.load('fon.png'), (700,500))

                                    wh1 = GameSprite('hort.png',0,-10,280, 20)
                                    wh2 = GameSprite('hort.png',400,-10,300, 20)
                                    wh3 = GameSprite('hort.png',250,100,250, 20)
                                    wh4 = GameSprite('hort.png',400,220,150, 20)
                                    wh5 = GameSprite('hort.png',150,300,250, 20)
                                    wh6 = GameSprite('hort.png',250,360,300, 20)
                                    wh7 = GameSprite('hort.png',400,480,300, 20)
                                    wh8 = GameSprite('hort.png',-20,480,300, 20)


                                    wv1 = GameSprite('vert.png',140, 10, 20,400)
                                    wv2 = GameSprite('vert.png',400, 10, 20,90)
                                    wv3 = GameSprite('vert.png',399, 240, 20,80)
                                    wv4 = GameSprite('vert.png',530, 240, 20,120)
                                    wv5 = GameSprite('vert.png',-15, 0, 20,500)
                                    wv6 = GameSprite('vert.png',690, 0, 20,500)


                                    monsterv1 = Enemy('tapok.png', 250,150,70,60,6, 'vert1')
                                    monsterv2 = Enemy('tapok.png', 500,150,70,60,6, 'vert2')
                                    monsterv3 = Enemy('tapok.png', 60,300,70,60,6, 'vert3')
                                    monsterh1 = Enemy('tapok.png', 50,200,70,60,6, 'hort')

                                    bullets = sprite.Group()
                                    monsters = sprite.Group()
                                    barriers = sprite.Group()

                                    barriers.add(wh1)
                                    barriers.add(wh2)
                                    barriers.add(wh3)
                                    barriers.add(wh4)
                                    barriers.add(wh5)
                                    barriers.add(wh6)
                                    barriers.add(wh7)
                                    barriers.add(wh8)

                                    barriers.add(wv1)
                                    barriers.add(wv2)
                                    barriers.add(wv3)
                                    barriers.add(wv4)
                                    barriers.add(wv5)
                                    barriers.add(wv6)


                                    monsters.add(monsterh1)
                                    monsters.add(monsterv1)
                                    monsters.add(monsterv2)
                                    monsters.add(monsterv3)

                                    pacman = Player('cat.png',300, -10, 80,80,0,0)

                                    final_sprite = GameSprite('final.png', 420, 0,80,80)
                                    falsh_final_sprite = GameSprite('final.png',300,430,80,80)
                                    falsh_final_sprite2 = GameSprite('final.png',10,10,80,80)



                                    picture = transform.scale(image.load('fon.png'), (700,500))

                                    finish = False
                                    run = True
                                    a = 'level3'
                                    while run:
                                        time.delay(50)
                                        for e in event.get():
                                            if e.type == QUIT:
                                                run = False
                                            elif e.type == KEYDOWN:
                                                if e.key == K_LEFT:
                                                    pacman.x_speed = -7
                                                if e.key == K_RIGHT:
                                                    pacman.x_speed = 7
                                                if e.key == K_UP:
                                                    pacman.y_speed = -7
                                                if e.key == K_DOWN:
                                                    pacman.y_speed = 7
                                            elif e.type == KEYUP:
                                                if e.key == K_LEFT:
                                                    pacman.x_speed = 0
                                                if e.key == K_RIGHT:
                                                    pacman.x_speed = 0
                                                if e.key == K_UP:
                                                    pacman.y_speed = 0
                                                if e.key == K_DOWN:
                                                    pacman.y_speed = 0
                                                if e.key == K_SPACE:
                                                    pacman.fire()


                                        if not finish:
                                            if a == 'level3':
                                                window.blit(picture, (0,0))
                                                pacman.reset()
                                                pacman.update()
                                                barriers.draw(window)
                                                final_sprite.reset()
                                                falsh_final_sprite.reset()
                                                falsh_final_sprite2.reset()
                                                bullets.draw(window)
                                                bullets.update()


                                                sprite.groupcollide(monsters,bullets, True, True)
                                                monsters.update()
                                                monsters.draw(window)
                                                sprite.groupcollide(bullets, barriers, True, False)


                                                if sprite.spritecollide(pacman,monsters, False):
                                                    finish = True
                                                    img = image.load('over.png')
                                                    d = img.get_width() // img.get_height()
                                                    window.fill((255,255, 255))
                                                    window.blit(transform.scale(img, (win_height *d, win_height)), (90,0))

                                                if sprite.collide_rect(pacman,final_sprite):
                                                    #a = 'level4'
                                                    img = image.load('win.png')
                                                    window.fill((255,255, 255))
                                                    window.blit(transform.scale(img, (win_width, win_height)), (0,0))
            display.update()